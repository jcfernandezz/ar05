'Para deploy correr
'rs -i deploy_report.rss -s http://testappgpx1/ReportServer_DYNGP2018  -v ReportFolder="RDL_UPLD" -v DataSourceFolder="DATA_SOURCE" -v filePath="c:\Tiiselam" -v Servidor="TESTAPPGPX1\DYNGP2018" -v Base="MSAL" -v ReportName="FE_Factura_Gral" -e Mgmt2010

Dim definition As [Byte]() = Nothing

Dim bytedefinition as [Byte]() = nothing

Dim warnings As Warning() = Nothing

Public Sub Main()

	Console.WriteLine()

	Console.WriteLine("Initiating Deployment")

	rs.Credentials = System.Net.CredentialCache.DefaultCredentials

	Try

		'Create the shared data source

		CreateFolders(Base, "/", "Base","Visible")
		CreateFolders(ReportFolder, "/"+Base, "Report Folder","Visible")
		'CreateFolders(DataSourceFolder,"/"+Base,"Data Sources","Visible")

		CreateDataSource("DataSourceLoc.rds")
		
		PublishReport(ReportName)

		'UpdateDataSources(ReportFolder, DataSourcePath)

	Catch goof As Exception

		Console.WriteLine(goof.Message)

	End Try

End Sub

'Utility for creation of folders

Public Sub CreateFolders(ByVal folderName as string, ByVal parentPath as string, ByVal description as String, ByVal visible as string)

	Console.WriteLine()

	Console.WriteLine("Checking for Target Folders {0}", parentPath )

	'CatalogItem properties

	Dim descriptionProp as new [Property]

	descriptionProp.Name = "Description"

	descriptionProp.Value= description

	Dim visibleProp as new [Property]

	visibleProp.Name = "Visible"

	visibleProp.value= visible

	Dim props(1) as [Property]

	props(0) = descriptionProp

	props(1) = visibleProp

	Try

		rs.CreateFolder(folderName,parentPath,props)

		Console.WriteLine("Folder {0} successfully created", foldername)

	Catch goof as SoapException

		If goof.Message.Indexof("AlreadyExists")>0 Then

			Console.WriteLine("Folder {0} already exists",foldername)

		End If

	End Try

 End Sub

'Utility for creating Data Sources on the Server

Public Sub CreateDataSource(filename as string)

	'Define the data source definition.
	
	Dim dsDefinition As New DataSourceDefinition()

	Dim DataSourceName as string

	Dim IntegratedSec As String

	Dim DataSourceID As String

	DataSourceName="DS_" +  Base

	dsdefinition.CredentialRetrieval = CredentialRetrievalEnum.Integrated

	dsdefinition.ConnectString = "Data Source=" + Servidor + ";Initial Catalog=" + Base
 
	dsdefinition.Enabled = True

	dsdefinition.EnabledSpecified = True

	dsdefinition.Extension = "SQL"

	dsdefinition.ImpersonateUser = False

	dsdefinition.ImpersonateUserSpecified = True

	dsdefinition.Prompt = Nothing

	dsdefinition.WindowsCredentials = False

	Try

		rs.CreateDataSource(DataSourceName, "/" + Base, False, dsdefinition, Nothing)

		Console.WriteLine("Data source {0} created successfully", DataSourceName.ToString)

	Catch goof as SoapException

		If goof.Message.Indexof("AlreadyExists")>0 Then

			Console.WriteLine("The Data Source name {0} already exists",DataSourceName.ToString)
		End If

	End Try

End Sub

Public Sub PublishReport(ByVal reportName As String)

	Try

		Dim stream As FileStream = File.OpenRead(filePath + "\" + reportname  )

		'definition = New [Byte](stream.Length) {}
		definition =  New [Byte](stream.Length-1) {}

		stream.Read(definition, 0, CInt(stream.Length))

		stream.Close()

	Catch e As IOException

		Console.WriteLine(e.Message)

	End Try

	reportname=reportname.tostring.replace(".rdl","")

	Console.WriteLine("Attempting to Deploy Report Name {0}", reportname.tostring)

	Try

		Dim item as CatalogItem

		item=rs.CreateCatalogItem("Report",reportname, "/" + Base + "/" + ReportFolder, False, definition,nothing, warnings)

		'warnings = rs.CreateCatalogItem(reportname, "/" + ReportFolder, False, definition, Nothing)

		If Not (warnings Is Nothing) Then

			Dim warning As Warning

			For Each warning In warnings

				Console.WriteLine(warning.Message)

			Next warning

		Else

			Console.WriteLine("Report: {0} published successfully with no warnings", reportName)

		End If

	Catch goof as SoapException

		If goof.Message.Indexof("AlreadyExists")>0 Then

			Console.WriteLine("The Report Name {0} already exists",reportName.ToString)

		Else

			If goof.Message.IndexOf("published")=-1 Then

				Console.WriteLine(goof.Message)

			End If

		End If

	End Try

End Sub

 

'Utility to Update The Data Sources on the Server

Public Sub UpdateDataSources(ReportFolder as string, DataSourcePath as string)

	rs.Credentials = System.Net.CredentialCache.DefaultCredentials

	Dim item as CatalogItem

	Dim items as CatalogItem()

	Try

		items=rs.ListChildren("/" + ReportFolder, False)

		For Each item in items

			Dim dataSources() as DataSource = rs.GetItemDataSources(item.Path)

			For Each ds as DataSource in dataSources

				Dim sharedDs(0) as DataSource

				sharedDs(0)=GetDataSource(DataSourcePath, ds.Name)

				rs.SetItemDataSources(item.Path, sharedDs)

				Console.WriteLine("Set " & ds.Name & " datasource for " & item.Path & " report")

			Next

		Next

		Console.WriteLine("Shared data source reference set for reports in the {0} folder.", ReportFolder)

	Catch goof As SoapException

		Console.WriteLine(goof.Detail.InnerXml.ToString())

	End Try

End Sub

 

'Function to Reference Data Sources

Private Function GetDataSource(sharedDataSourcePath as string, dataSourceName as String) as DataSource

Dim reference As New DataSourceReference()

Dim ds As New DataSource

reference.Reference = sharedDataSourcePath & "/" & dataSourceName

ds.Item = CType(reference, DataSourceDefinitionOrReference)

ds.Name = dataSourceName

Console.WriteLine("Attempting to Publish Data Source {0}", ds.Name)

GetDataSource=ds

End Function